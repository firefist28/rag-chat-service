#version: "3.8"

services:
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    # host_port:container_port -> container runs MySQL on 3306 always; host port is configurable via MYSQL_PORT_HOST
    ports:
      - "${MYSQL_PORT_HOST:-3306}:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  adminer:
    image: adminer
    ports:
      - "${ADMINER_PORT_HOST:-8081}:8080"
    depends_on:
      - mysql
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    restart: unless-stopped

  backend:
    build: .
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - llm.enabled=${LLM_ENABLED}
      - llm.api.key=${LLM_API_KEY}
      - llm.endpoint=${LLM_ENDPOINT}
      - API_KEY=${API_KEY}
      - API_KEYS=${API_KEYS}
    # map host SERVER_PORT to container SERVER_PORT (container must run the app on the same port)
    ports:
      - "${SERVER_PORT:-8080}:${SERVER_PORT:-8080}"
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped

volumes:
  mysql-data:
